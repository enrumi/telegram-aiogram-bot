import sqlite3
import asyncio
from aiogram import Router, F, html
from aiogram.types import (
    Message, CallbackQuery, LabeledPrice, PreCheckoutQuery,
    InlineKeyboardMarkup, InlineKeyboardButton
)
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.exceptions import TelegramAPIError

from config import STARS_AMOUNT, MESSAGES, ADMINS
from loader import bot

router = Router()

# üì¶ –°–æ—Å—Ç–æ—è–Ω–∏—è
class GiftState(StatesGroup):
    waiting_for_username = State()

# üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
def create_db():
    try:
        conn = sqlite3.connect('user_payments.db')  # –°–æ–∑–¥–∞—ë–º/–æ—Ç–∫—Ä—ã–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        cursor = conn.cursor()
        cursor.execute(''' 
            CREATE TABLE IF NOT EXISTS payments (
                user_id INTEGER PRIMARY KEY,
                username TEXT NOT NULL
            )
        ''')
        conn.commit()
        conn.close()
        print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ —Ç–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã.")
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Ç–∞–±–ª–∏—Ü—ã: {e}")

# üóÑÔ∏è –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def save_payment(user_id, username):
    conn = sqlite3.connect('user_payments.db')
    cursor = conn.cursor()
    cursor.execute(''' 
        INSERT OR REPLACE INTO payments (user_id, username)
        VALUES (?, ?)
    ''', (user_id, username))
    conn.commit()
    conn.close()

# üóÑÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–ª–∞—Ç–µ–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_user_payment(user_id):
    conn = sqlite3.connect('user_payments.db')
    cursor = conn.cursor()
    cursor.execute('SELECT username FROM payments WHERE user_id = ?', (user_id,))
    user = cursor.fetchone()
    conn.close()
    return user

# üóÑÔ∏è –•—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_messages = {}

# üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_message(user_id):
    return user_messages.get(user_id)

# üîπ –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ
async def delete_old_message(user_id, chat_id):
    old_message_id = get_message(user_id)
    if old_message_id:
        try:
            await bot.delete_message(chat_id, old_message_id)
        except TelegramAPIError as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ "–±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç" —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
async def send_typing_action(chat_id, delay=0):  # –£–±–∏—Ä–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
    await bot.send_chat_action(chat_id, action="typing")  # –°–æ–æ–±—â–∞–µ–º, —á—Ç–æ –±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç
    await asyncio.sleep(delay)  # –£–±–∏—Ä–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É, —Å—Ç–∞–≤–∏–º 0 –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞

# üîπ /start ‚Äì –£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ
@router.message(F.text == "/start")
async def cmd_start(message: Message):
    # –ü–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –±–æ—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç" –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
    await send_typing_action(message.chat.id, 0)
    
    user_payment = get_user_payment(message.from_user.id)
    
    if user_payment:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –æ–ø–ª–∞—Ç–∏–ª
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ
        await delete_old_message(message.from_user.id, message.chat.id)

        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –æ–ø–ª–∞—Ç–∏–ª, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚≠ê –ö–∞–Ω–∞–ª ‚≠ê", url="https://t.me/GiftModChannel")]
])
        msg = await message.answer(
            f"üéâ <b>–í—ã —É–∂–µ –æ–ø–ª–∞—Ç–∏–ª–∏ –∑–≤–µ–∑–¥—ã!</b>\n\n"
            "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –æ–ø–ª–∞—Ç—É! –û–∂–∏–¥–∞–π—Ç–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 72 —á–∞—Å–æ–≤, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤.\n\n"
            "üëá <b>–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:</b>",
            reply_markup=keyboard,
            parse_mode="HTML"
        )
    else:
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ
        await delete_old_message(message.from_user.id, message.chat.id)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –æ–ø–ª–∞—Ç–∏–ª, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã
        keyboard = InlineKeyboardMarkup(inline_keyboard=[ 
            [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å 100 ‚≠ê", callback_data="pay_100")] 
        ]) 

        msg = await message.answer(
            "üåü <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ 100 –∑–≤–µ–∑–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–æ—Ä—Ç–∏–∫ –∏ –∫–æ—Ç–∞.! üéÇüê±\n\n"
            "üëá <b>–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:</b>",
            reply_markup=keyboard,
            parse_mode="HTML"
        )
    
    user_messages[message.from_user.id] = msg.message_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

# üîπ –ö–Ω–æ–ø–∫–∞ "–û–ø–ª–∞—Ç–∏—Ç—å 100 ‚≠ê"
@router.callback_query(F.data == "pay_100")
async def pay_handler(callback: CallbackQuery):
    try:
        # –ü–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –±–æ—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç" –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
        await send_typing_action(callback.message.chat.id, 0)

        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ
        await delete_old_message(callback.from_user.id, callback.message.chat.id)

        prices = [LabeledPrice(label='–¢–æ—Ä—Ç–∏–∫ –∏ –∫–æ—Ç–∏–∫', amount=STARS_AMOUNT)]

        msg = await bot.send_invoice(
            chat_id=callback.from_user.id,
            title='–¢–æ—Ä—Ç–∏–∫üéÇ & –∫–æ—Ç–∏–∫üê±',
            description='–û–ø–ª–∞—Ç–∏ 100 ‚≠ê –∏ –ø–æ–ª—É—á–∏ –ø–æ–¥–∞—Ä–æ–∫!',
            provider_token="381764678:TEST:5e4f61fd-b3f1-4d19-9e89-9f81e23893f5",  # –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω
            currency="XTR",
            prices=prices,
            start_parameter='stars-payment',
            payload='stars-payment-payload'
        )

        user_messages[callback.from_user.id] = msg.message_id  # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await callback.answer()

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω–≤–æ–π—Å–∞: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–ø–ª–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# üîπ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
@router.pre_checkout_query()
async def pre_checkout_query_handler(pre_checkout_query: PreCheckoutQuery):
    try:
        # –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—É–º–º—ã –∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        if pre_checkout_query.invoice_payload != 'stars-payment-payload':
            raise ValueError("–ù–µ–≤–µ—Ä–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø—Ä–æ—Å–∞.")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É–º–º—É
        if pre_checkout_query.total_amount != STARS_AMOUNT:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞.")
        
        await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {e}")
        await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=False, error_message="–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏.")

# üîπ –£—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞ ‚Äì —É–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ
@router.message(F.successful_payment)
async def successful_payment_handler(message: Message, state: FSMContext):
    try:
        # –ü–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –±–æ—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç" –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
        await send_typing_action(message.chat.id, 0)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å—É–º–º—ã (–ø–µ—Ä–µ–¥–∞–µ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, 100 –∑–≤—ë–∑–¥)
        if message.successful_payment.total_amount != STARS_AMOUNT:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞ –æ–ø–ª–∞—Ç—ã.")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        username = message.from_user.username if message.from_user.username else "–ë–µ–∑ username"
        save_payment(message.from_user.id, username)

        # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        await delete_old_message(message.from_user.id, message.chat.id)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
        msg = await message.answer(
            "‚úÖ <b>–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!</b>\n\n"
            "‚úèÔ∏è –ù–∞–ø–∏—à–∏ —Å–≤–æ–π Telegram username, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ üéÅ",
            parse_mode="HTML"
        )

        user_messages[message.from_user.id] = msg.message_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await state.set_state(GiftState.waiting_for_username)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.")

# üîπ –í–≤–æ–¥ username ‚Äì —É–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ
@router.message(GiftState.waiting_for_username)
async def receive_username(message: Message, state: FSMContext):
    username = message.text.strip()
    await state.clear()

    # –ü–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –±–æ—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç" –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
    await send_typing_action(message.chat.id, 0)

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ
    await delete_old_message(message.from_user.id, message.chat.id)

    msg = await message.answer(
        f"üéâ <b>–°–ø–∞—Å–∏–±–æ, @{username}!</b>\n"
        "üéÅ –¢–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫ —É–∂–µ –ø–æ—á—Ç–∏ –≤ –ø—É—Ç–∏...\n"
        "‚è≥ <b>–û–∂–∏–¥–∞–π—Ç–µ –¥–æ 72 —á–∞—Å–æ–≤!</b>",
        parse_mode="HTML"
    )

    user_messages[message.from_user.id] = msg.message_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
create_db()
